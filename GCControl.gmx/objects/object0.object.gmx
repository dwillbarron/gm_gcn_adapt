<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Init stuff
gca_init();

self.result1 = gca_attach();
//show_debug_message(string_insert("result 1: ", string(self.result1), 0));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(make_color_rgb(0, 0, 0));
var result;
result = gca_begin_tick();

if (result &lt; 0) {
    draw_text(0, 0, result);
    result = gca_attach();
}
else {
    draw_text(0, 0, global.__gca_last_frame);
    var pos, controller, axes, c2, a2;
    var i;
    
    for (i = 0; i &lt; 4; i++) {
        controller = global.__gca_controllers[i];
        axes = controller[? 'axis']
        pos = 12;
        draw_text(i * 100, pos, controller[? 'device_status']);
        pos += 12;
        draw_text(i * 100, pos, gca_controller_present(i));
        pos += 12;
        draw_text(i * 100, pos, string_insert("LX ", string(gca_get_axis(i, gca_axis.lstick_x)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("LY ", string(gca_get_axis(i, gca_axis.lstick_y)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("CX ", string(gca_get_axis(i, gca_axis.cstick_x)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("CY ", string(gca_get_axis(i, gca_axis.cstick_y)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("LA ", string(gca_get_axis(i, gca_axis.l_analog)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("RA ", string(gca_get_axis(i, gca_axis.r_analog)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("A ", string(gca_get_button(i, gca_btn.a)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("B ", string(gca_get_button(i, gca_btn.b)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("X ", string(gca_get_button(i, gca_btn.x)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("Y ", string(gca_get_button(i, gca_btn.y)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("Z ", string(gca_get_button(i, gca_btn.z)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("LD ", string(gca_get_button(i, gca_btn.l_digital)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("RD ", string(gca_get_button(i, gca_btn.r_digital)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("DU ", string(gca_get_button(i, gca_btn.dp_up)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("DR ", string(gca_get_button(i, gca_btn.dp_right)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("DD ", string(gca_get_button(i, gca_btn.dp_down)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("DL ", string(gca_get_button(i, gca_btn.dp_left)), 0));
        pos += 12;
        draw_text(i * 100, pos, string_insert("ST ", string(gca_get_button(i, gca_btn.start)), 0));
        pos += 12;
        draw_text(i * 100, pos, controller[? 'buttons']);
        pos += 12;
        gca_set_rumble(i, gca_get_button(i, gca_btn.a));

    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
